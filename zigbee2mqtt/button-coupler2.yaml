blueprint:
  name: "Custom Button Controller"
  description: "Blueprint for controlling lights with a 4-button device"
  domain: automation
  source_url: https://github.com/jcklerk/HomeAssistant-BluePrints/blob/master/zigbee2mqtt/button-coupler2.yaml
  author: jcklerk
  input:
    button_device:
      name: "Button Device"
      description: "Select the 4-button device (e.g., sensor.0x0000000001719026_action)"
      selector:
        entity:
          domain: sensor
          multiple: false

    light_button_1:
      name: "Lights for Button 1"
      description: "Lights to control when Button 1 is pressed"
      default:
        entity_id: none
      selector:
        target:
          entity:
            domain: light

    light_button_2:
      name: "Lights for Button 2"
      description: "Lights to control when Button 2 is pressed"
      default:
        entity_id: none
      selector:
        target:
          entity:
            domain: light

    light_button_3:
      name: "Lights for Button 3"
      description: "Lights to control when Button 3 is pressed"
      default:
        entity_id: none
      selector:
        target:
          entity:
            domain: light

    light_button_4:
      name: "Lights for Button 4"
      description: "Lights to control when Button 4 is pressed"
      default:
        entity_id: none
      selector:
        target:
          entity:
            domain: light

mode: restart
max_exceeded: silent
variables:
  button_device: !input button_device
  light_button_1: !input light_button_1
  light_button_2: !input light_button_2
  light_button_3: !input light_button_3
  light_button_4: !input light_button_4

trigger:
  - platform: state
    entity_id: !input button_device

action:
  - choose:
      - conditions:
          - condition: template
            value_template: '{{ trigger.to_state.state == "press_1" }}'
        sequence:
          - service: light.toggle
            target:
              entity_id: !input light_button_1

      - conditions:
          - condition: template
            value_template: '{{ trigger.to_state.state == "press_2" }}'
        sequence:
          - service: light.toggle
            target:
              entity_id: !input light_button_2

      - conditions:
          - condition: template
            value_template: '{{ trigger.to_state.state == "press_3" }}'
        sequence:
          - service: light.toggle
            target:
              entity_id: !input light_button_3

      - conditions:
          - condition: template
            value_template: '{{ trigger.to_state.state == "press_4" }}'
        sequence:
          - service: light.toggle
            target:
              entity_id: !input light_button_4

      # Long press for dimming up
      - conditions:
          - condition: template
            value_template: '{{ trigger.to_state.state == "press_1" }}'
        sequence:
          - repeat:
              while:
                - condition: template
                  value_template: '{{ states(trigger.entity_id) == "press_1" }}'
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light_button_1
                - delay: "00:00:00.5" # Adjust the delay based on the desired dimming speed
          - service: light.turn_off
            target:
              entity_id: !input light_button_1

      - conditions:
          - condition: template
            value_template: '{{ trigger.to_state.state == "press_2" }}'
        sequence:
          - repeat:
              while:
                - condition: template
                  value_template: '{{ states(trigger.entity_id) == "press_2" }}'
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light_button_2
                - delay: "00:00:00.5"
          - service: light.turn_off
            target:
              entity_id: !input light_button_2

      - conditions:
          - condition: template
            value_template: '{{ trigger.to_state.state == "press_3" }}'
        sequence:
          - repeat:
              while:
                - condition: template
                  value_template: '{{ states(trigger.entity_id) == "press_3" }}'
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light_button_3
                - delay: "00:00:00.5"
          - service: light.turn_off
            target:
              entity_id: !input light_button_3

      - conditions:
          - condition: template
            value_template: '{{ trigger.to_state.state == "press_4" }}'
        sequence:
          - repeat:
              while:
                - condition: template
                  value_template: '{{ states(trigger.entity_id) == "press_4" }}'
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light_button_4
                - delay: "00:00:00.5"
          - service: light.turn_off
            target:
              entity_id: !input light_button_4
