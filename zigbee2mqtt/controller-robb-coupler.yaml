blueprint:
  name: Controller - ROBB Coupler
  description: "Controller automation for controlling lights for the robb coupler (EnOcean PTM 215Z Friends of Hue switch) \n *Make sure that 'Elapsed' is enabled in the z2m advanced settings.* \n This Blueprint is based on: vandalon/z2m EnOcean PTM 215Z (Friends of Hue) switch"
  domain: automation
  input:
    controller:
      name: (Zigbee2MQTT) Controller Name
      description: The name of the controller as defined in z2m (e.g. Livingroom Switch)
      default: ""
    base_topic:
      name: (Zigbee2MQTT) Base mqtt topic
      description: The base topic as configured in z2m
      default: zigbee2mqtt
    hold_delay:
      name: Hold delay
      description: If the button has been held more than the configured Hold delay, the corresponding held action is triggered.
      default: 500
      selector:
        number:
          min: 100.0
          max: 1000.0
          unit_of_measurement: milliseconds
          mode: box
          step: 10.0
    lights_3:
      name: Lights K1
      description: Light(s) to control when using button K1 (on/off/dim)
      default: []
      selector:
        entity:
          domain: light
          multiple: true
    switches_3:
      name: Switch K1
      description: Switch(es) to control when using button K1 (on/off)
      default: []
      selector:
        entity:
          domain: switch
          multiple: true
    lights_1:
      name: Lights K3
      description: Light(s) to control when using button K3 (on/off/dim)
      default: []
      selector:
        entity:
          domain: light
          multiple: true
    switches_1:
      name: Switch K3
      description: Switch(es) to control when using button K3 (on/off)
      default: []
      selector:
        entity:
          domain: switch
          multiple: true
    lights_1_and_3:
      name: Lights K1 and K3
      description: Light(s) to control when using button K1 and K3 (on/off/dim)
      default: []
      selector:
        entity:
          domain: light
          multiple: true
    switches_1_and_3:
      name: Switch K1 and K3
      description: Switch(es) to control when using button K1 and K3 (on/off)
      default: []
      selector:
        entity:
          domain: switch
          multiple: true
    lights_4:
      name: Lights K2
      description: Light(s) to control when using button K2 (on/off/dim)
      default: []
      selector:
        entity:
          domain: light
          multiple: true
    switches_4:
      name: Switch K2
      description: Switch(es) to control when using button K2 (on/off)
      default: []
      selector:
        entity:
          domain: switch
          multiple: true
    lights_2:
      name: Lights K4
      description: Light(s) to control when using button K4 (on/off/dim)
      default: []
      selector:
        entity:
          domain: light
          multiple: true
    switches_2:
      name: Switch K4
      description: Switch(es) to control when using button K4 (on/off)
      default: []
      selector:
        entity:
          domain: switch
          multiple: true
    lights_2_and_4:
      name: Lights K2 and K4
      description: Light(s) to control when using button K2 and K4 (on/off/dim)
      default: []
      selector:
        entity:
          domain: light
          multiple: true
    switches_2_and_4:
      name: Switch K2 and K4
      description: Switch(es) to control when using button K2 and K4 (on/off)
      default: []
      selector:
        entity:
          domain: switch
          multiple: true

  source_url: https://github.com/jcklerk/HomeAssistant-BluePrints/blob/master/zigbee2mqtt/controller-robb-coupler.yaml
mode: restart
max_exceeded: silent
variables:
  hold_delay: !input "hold_delay"
trigger_variables:
  base_topic: !input "base_topic"
  controller: !input "controller"
trigger:
  - platform: mqtt
    topic: "{{ base_topic ~ '/' ~ controller }}"
condition:
  - condition: template
    value_template: >
      {{
        ('release_' in trigger.payload_json.action and trigger.payload_json.elapsed is defined)
        or 'press_' in trigger.payload_json.action
      }}
action:
  - variables:
      controller: !input "controller"
  - choose:
      - conditions: '{{ "release_" in trigger.payload_json.action and trigger.payload_json.elapsed | int < hold_delay }}'
        sequence:
          - choose:
              - conditions: '{{ trigger.payload_json.action == "release_1" }}'
                sequence:
                  - variables:
                      light_input: !input lights_1
                      switch_input: !input switches_1
                  - choose:
                      - conditions: "{{ (light_input | length > 0 and is_state(light_input[0], 'off')) or (switch_input | length > 0 and is_state(switch_input[0], 'off')) }}"
                        sequence:
                          - service: light.turn_on
                            target:
                              entity_id: "{{ light_input }}"
                          - service: switch.turn_on
                            target:
                              entity_id: "{{ switch_input }}"
                    default:
                      - service: light.turn_off
                        target:
                          entity_id: "{{ light_input }}"
                      - service: switch.turn_off
                        target:
                          entity_id: "{{ switch_input }}"
              - conditions: '{{ trigger.payload_json.action == "release_2" }}'
                sequence:
                  - variables:
                      light_input: !input lights_2
                      switch_input: !input switches_2
                  - choose:
                      - conditions: "{{ (light_input | length > 0 and is_state(light_input[0], 'off')) or (switch_input | length > 0 and is_state(switch_input[0], 'off')) }}"
                        sequence:
                          - service: light.turn_on
                            target:
                              entity_id: "{{ light_input }}"
                          - service: switch.turn_on
                            target:
                              entity_id: "{{ switch_input }}"
                    default:
                      - service: light.turn_off
                        target:
                          entity_id: "{{ light_input }}"
                      - service: switch.turn_off
                        target:
                          entity_id: "{{ switch_input }}"
              - conditions: '{{ trigger.payload_json.action == "release_3" }}'
                sequence:
                  - variables:
                      light_input: !input lights_3
                      switch_input: !input switches_3
                  - choose:
                      - conditions: "{{ (light_input | length > 0 and is_state(light_input[0], 'off')) or (switch_input | length > 0 and is_state(switch_input[0], 'off')) }}"
                        sequence:
                          - service: light.turn_on
                            target:
                              entity_id: "{{ light_input }}"
                          - service: switch.turn_on
                            target:
                              entity_id: "{{ switch_input }}"
                    default:
                      - service: light.turn_off
                        target:
                          entity_id: "{{ light_input }}"
                      - service: switch.turn_off
                        target:
                          entity_id: "{{ switch_input }}"
              - conditions: '{{ trigger.payload_json.action == "release_4" }}'
                sequence:
                  - variables:
                      light_input: !input lights_4
                      switch_input: !input switches_4
                  - choose:
                      - conditions: "{{ (light_input | length > 0 and is_state(light_input[0], 'off')) or (switch_input | length > 0 and is_state(switch_input[0], 'off')) }}"
                        sequence:
                          - service: light.turn_on
                            target:
                              entity_id: "{{ light_input }}"
                          - service: switch.turn_on
                            target:
                              entity_id: "{{ switch_input }}"
                    default:
                      - service: light.turn_off
                        target:
                          entity_id: "{{ light_input }}"
                      - service: switch.turn_off
                        target:
                          entity_id: "{{ switch_input }}"
              - conditions: '{{ trigger.payload_json.action == "release_1_and_3" }}'
                sequence:
                  - variables:
                      light_input: !input lights_1_and_3
                      switch_input: !input switches_1_and_3
                  - choose:
                      - conditions: "{{ (light_input | length > 0 and is_state(light_input[0], 'off')) or (switch_input | length > 0 and is_state(switch_input[0], 'off')) }}"
                        sequence:
                          - service: light.turn_on
                            target:
                              entity_id: "{{ light_input }}"
                          - service: switch.turn_on
                            target:
                              entity_id: "{{ switch_input }}"
                    default:
                      - service: light.turn_off
                        target:
                          entity_id: "{{ light_input }}"
                      - service: switch.turn_off
                        target:
                          entity_id: "{{ switch_input }}"
              - conditions: '{{ trigger.payload_json.action == "release_2_and_4" }}'
                sequence:
                  - variables:
                      light_input: !input lights_2_and_4
                      switch_input: !input switches_2_and_4
                  - choose:
                      - conditions: "{{ (light_input | length > 0 and is_state(light_input[0], 'off')) or (switch_input | length > 0 and is_state(switch_input[0], 'off')) }}"
                        sequence:
                          - service: light.turn_on
                            target:
                              entity_id: "{{ light_input }}"
                          - service: switch.turn_on
                            target:
                              entity_id: "{{ switch_input }}"
                    default:
                      - service: light.turn_off
                        target:
                          entity_id: "{{ light_input }}"
                      - service: switch.turn_off
                        target:
                          entity_id: "{{ switch_input }}"
      - conditions: '{{ "press_" in trigger.payload_json.action }}'
        sequence:
          - delay:
              milliseconds: !input "hold_delay"
          - choose:
              - conditions: '{{ trigger.payload_json.action == "press_1" }}'
                sequence:
                  - variables:
                      light_input: !input lights_1
                      current_brightness: "{{ state_attr(light_input[0], 'brightness') | int(default=0) }}"
                  - repeat:
                      count: 25
                      sequence:
                        - choose:
                            - conditions: "{{ current_brightness <= 230 }}"
                              sequence:
                                - service: light.turn_on
                                  data:
                                    brightness_step: 25
                                  target:
                                    entity_id: "{{ light_input }}"
                            - conditions: "{{ current_brightness > 230 }}"
                              sequence:
                                - service: light.turn_on
                                  data:
                                    brightness_step: -25
                                  target:
                                    entity_id: "{{ light_input }}"
                        - delay:
                            milliseconds: 500
              - conditions: '{{ trigger.payload_json.action == "press_2" }}'
                sequence:
                  - variables:
                      light_input: !input lights_2
                      current_brightness: "{{ state_attr(light_input[0], 'brightness') | int(default=0) }}"
                  - repeat:
                      count: 25
                      sequence:
                        - choose:
                            - conditions: "{{ current_brightness <= 230 }}"
                              sequence:
                                - service: light.turn_on
                                  data:
                                    brightness_step: 25
                                  target:
                                    entity_id: "{{ light_input }}"
                            - conditions: "{{ current_brightness > 230 }}"
                              sequence:
                                - service: light.turn_on
                                  data:
                                    brightness_step: -25
                                  target:
                                    entity_id: "{{ light_input }}"
                        - delay:
                            milliseconds: 500
              - conditions: '{{ trigger.payload_json.action == "press_3" }}'
                sequence:
                  - variables:
                      light_input: !input lights_3
                      current_brightness: "{{ state_attr(light_input[0], 'brightness') | int(default=0) }}"
                  - repeat:
                      count: 25
                      sequence:
                        - choose:
                            - conditions: "{{ current_brightness <= 230 }}"
                              sequence:
                                - service: light.turn_on
                                  data:
                                    brightness_step: 25
                                  target:
                                    entity_id: "{{ light_input }}"
                            - conditions: "{{ current_brightness > 230 }}"
                              sequence:
                                - service: light.turn_on
                                  data:
                                    brightness_step: -25
                                  target:
                                    entity_id: "{{ light_input }}"
                        - delay:
                            milliseconds: 500
              - conditions: '{{ trigger.payload_json.action == "press_4" }}'
                sequence:
                  - variables:
                      light_input: !input lights_4
                      current_brightness: "{{ state_attr(light_input[0], 'brightness') | int(default=0) }}"
                  - repeat:
                      count: 25
                      sequence:
                        - choose:
                            - conditions: "{{ current_brightness <= 230 }}"
                              sequence:
                                - service: light.turn_on
                                  data:
                                    brightness_step: 25
                                  target:
                                    entity_id: "{{ light_input }}"
                            - conditions: "{{ current_brightness > 230 }}"
                              sequence:
                                - service: light.turn_on
                                  data:
                                    brightness_step: -25
                                  target:
                                    entity_id: "{{ light_input }}"
                        - delay:
                            milliseconds: 500
              - conditions: '{{ trigger.payload_json.action == "press_1_and_3" }}'
                sequence:
                  - variables:
                      light_input: !input lights_1_and_3
                      current_brightness: "{{ state_attr(light_input[0], 'brightness') | int(default=0) }}"
                  - repeat:
                      count: 25
                      sequence:
                        - choose:
                            - conditions: "{{ current_brightness <= 230 }}"
                              sequence:
                                - service: light.turn_on
                                  data:
                                    brightness_step: 25
                                  target:
                                    entity_id: "{{ light_input }}"
                            - conditions: "{{ current_brightness > 230 }}"
                              sequence:
                                - service: light.turn_on
                                  data:
                                    brightness_step: -25
                                  target:
                                    entity_id: "{{ light_input }}"
                        - delay:
                            milliseconds: 500
              - conditions: '{{ trigger.payload_json.action == "press_2_and_4" }}'
                sequence:
                  - variables:
                      light_input: !input lights_2_and_4
                      current_brightness: "{{ state_attr(light_input[0], 'brightness') | int(default=0) }}"
                  - repeat:
                      count: 25
                      sequence:
                        - choose:
                            - conditions: "{{ current_brightness <= 230 }}"
                              sequence:
                                - service: light.turn_on
                                  data:
                                    brightness_step: 25
                                  target:
                                    entity_id: "{{ light_input }}"
                            - conditions: "{{ current_brightness > 230 }}"
                              sequence:
                                - service: light.turn_on
                                  data:
                                    brightness_step: -25
                                  target:
                                    entity_id: "{{ light_input }}"
                        - delay:
                            milliseconds: 500
